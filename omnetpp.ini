[General]
#debug-on-errors = true
#record-eventlog = true
network = Scenario
sim-time-limit = 1000s

cmdenv-express-mode = true

*.hosts = 30    # The number of hosts
*.numGsc =1    # The number of Gsc

# the simulation area
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1000m
**.constraintAreaMaxY = 1000m
**.constraintAreaMaxZ = 1000m


# the dones' corrdinates
*.uav[0].mobility.initialX = 480m
*.uav[0].mobility.initialY = 250m
*.uav[0].mobility.initialZ = 200m

*.uav[1].mobility.initialX = 480m
*.uav[1].mobility.initialY = 250m
*.uav[1].mobility.initialZ = 210m

*.uav[2].mobility.initialX = 470m
*.uav[2].mobility.initialY = 170m
*.uav[2].mobility.initialZ = 220m

*.uav[3].mobility.initialX = 420m
*.uav[3].mobility.initialY = 250m
*.uav[3].mobility.initialZ = 200m

*.uav[4].mobility.initialX = 380m
*.uav[4].mobility.initialY = 250m
*.uav[4].mobility.initialZ = 210m

*.uav[5].mobility.initialX = 450m
*.uav[5].mobility.initialY = 250m
*.uav[5].mobility.initialZ = 190m

*.uav[6].mobility.initialX = 480m
*.uav[6].mobility.initialY = 260m
*.uav[6].mobility.initialZ = 180m

*.uav[7].mobility.initialX = 470m
*.uav[7].mobility.initialY = 250m
*.uav[7].mobility.initialZ = 180m

*.uav[8].mobility.initialX = 440m
*.uav[8].mobility.initialY = 250m
*.uav[8].mobility.initialZ = 210m

*.uav[9].mobility.initialX = 470m
*.uav[9].mobility.initialY = 220m
*.uav[9].mobility.initialZ = 210m

*.uav[10].mobility.initialX = 420m
*.uav[10].mobility.initialY = 250m
*.uav[10].mobility.initialZ = 210m

*.uav[11].mobility.initialX = 430m
*.uav[11].mobility.initialY = 250m
*.uav[11].mobility.initialZ = 190m

*.uav[12].mobility.initialX = 500m
*.uav[12].mobility.initialY = 250m
*.uav[12].mobility.initialZ = 190m

*.uav[13].mobility.initialX = 420m
*.uav[13].mobility.initialY = 250m
*.uav[13].mobility.initialZ = 210m

*.uav[14].mobility.initialX = 470m
*.uav[14].mobility.initialY = 240m
*.uav[14].mobility.initialZ = 170m

*.uav[15].mobility.initialX = 480m
*.uav[15].mobility.initialY = 250m
*.uav[15].mobility.initialZ = 180m

*.uav[16].mobility.initialX = 470m
*.uav[16].mobility.initialY = 240m
*.uav[16].mobility.initialZ = 230m

*.uav[17].mobility.initialX = 440m
*.uav[17].mobility.initialY = 250m
*.uav[17].mobility.initialZ = 200m

*.uav[18].mobility.initialX = 430m
*.uav[18].mobility.initialY = 250m
*.uav[18].mobility.initialZ = 190m

*.uav[19].mobility.initialX = 400m
*.uav[19].mobility.initialY = 250m
*.uav[19].mobility.initialZ = 210m

*.uav[20].mobility.initialX = 450m
*.uav[20].mobility.initialY = 250m
*.uav[20].mobility.initialZ = 220m

*.uav[21].mobility.initialX = 470m
*.uav[21].mobility.initialY = 250m
*.uav[21].mobility.initialZ = 230m

*.uav[22].mobility.initialX = 470m
*.uav[22].mobility.initialY = 200m
*.uav[22].mobility.initialZ = 210m

*.uav[23].mobility.initialX = 420m
*.uav[23].mobility.initialY = 260m
*.uav[23].mobility.initialZ = 210m

*.uav[24].mobility.initialX = 480m
*.uav[24].mobility.initialY = 250m
*.uav[24].mobility.initialZ = 190m

*.uav[25].mobility.initialX = 450m
*.uav[25].mobility.initialY = 240m
*.uav[25].mobility.initialZ = 180m

*.uav[26].mobility.initialX = 480m
*.uav[26].mobility.initialY = 280m
*.uav[26].mobility.initialZ = 170m

*.uav[27].mobility.initialX = 480m
*.uav[27].mobility.initialY = 250m
*.uav[27].mobility.initialZ = 190m

*.uav[28].mobility.initialX = 440m
*.uav[28].mobility.initialY = 200m
*.uav[28].mobility.initialZ = 240m

*.uav[29].mobility.initialX = 470m
*.uav[29].mobility.initialY = 230m
*.uav[29].mobility.initialZ = 190m





# the GSC' corrdinates
*.Gsc[0].mobility.initialX = 480m    
*.Gsc[0].mobility.initialY = 250m
*.Gsc[0].mobility.initialZ = 210m



# The mobility
**.UAV*.mobilityType = "MassMobility"
**.UAV*.mobility.initFromDisplayString = false
**.UAV*.mobility.changeInterval = truncnormal(2s, 0.5s)
**.UAV*.mobility.changeAngleBy = normal(0deg, 30deg)
**.UAV*.mobility.speed = truncnormal(20mps, 8mps)
**.UAV*.mobility.updateInterval = 100ms
**.UAV*.ac_wlan.interfaces = "wlan0"

# The stationery of Gsc
**.Gsc[0].mobilityType = "MassMobility"
**.Gsc[0].mobility.initFromDisplayString = false
**.Gsc[0].mobility.changeInterval = truncnormal(2s, 0.5s)
**.Gsc[0].mobility.changeAngleBy = 0deg
**.Gsc[0].mobility.speed = 0mps
**.Gsc[0].mobility.updateInterval = 100ms
**.Gsc*.ac_wlan.interfaces = "wlan0"



# Gsc UDPBasicApp for receiving messages

*.Gsc[0].numUdpApps = 1
*.Gsc[0].udpApp[0].typename = "UDPBasicApp"
#*.Gsc[0].udpApp[0].destAddresses = "UAV[0]"
*.Gsc[0].udpApp[0].localPort = 9001
*.Gsc[0].udpApp[0].destPort = 9001
*.Gsc[0].udpApp[0].messageLength = 100B
*.Gsc[0].udpApp[0].startTime = 20s
*.Gsc[0].udpApp[0].stopTime =100s
*.Gsc[0].udpApp[0].sendInterval = uniform(10s, 30s)

# UAV UDPBasicApp for sending messages

*.UAV[*].numUdpApps = 1
*.UAV[*].udpApp[0].typename = "UDPBasicApp"
*.UAV[*].udpApp[0].destAddresses = "Gsc[0]"
*.UAV[*].udpApp[0].localPort = 9001
*.UAV[*].udpApp[0].destPort = 9001
*.UAV[*].udpApp[0].messageLength = 100B
*.UAV[*].udpApp[0].startTime = 20s
*.UAV[*].udpApp[0].stopTime =100s
*.UAV[*].udpApp[0].sendInterval = uniform(10s, 30s)



# The nic settings ***** transmission information *******
**.wlan[*].typename = "IdealWirelessNic"
**.wlan[*].bitrate = 2Mbps
**.wlan[*].mac.address = "auto"
**.wlan[*].mac.headerLength = 20B
**.wlan[*].radioType = "IdealRadio"
**.wlan[*].radio.transmitter.headerBitLength = 0b
**.wlan[*].radio.transmitter.maxCommunicationRange = 1000m
**.wlan[*].radio.transmitter.maxInterferenceRange = 0m
**.wlan[*].radio.transmitter.maxDetectionRange = 0m
**.wlan[*].radio.receiver.ignoreInterference = true

# Energy model

**.hasStatus = true
**.energyStorageType = "SimpleEnergyStorage"
**.energyConsumerType = "StateBasedEnergyConsumer"
**.energyStorage.nominalCapacity = 100J
**.energyStorage.nodeShutdownCapacity = 0J
**.energyStorage.nodeStartCapacity = 0.5 * this.nominalCapacity
**.energyStorage.initialCapacity = 100J
**.energyGeneratorType = "AlternatingEnergyGenerator"
**.energyGenerator.energySinkModule = "^.energyStorage"
**.energyGenerator.powerGeneration = 100mW
**.energyGenerator.sleepInterval = exponential(10s)
**.energyGenerator.generationInterval = exponential(10s)




# For results recording 
**.udpapp.*.vector-recording = true
**.vector-recording = true
